name: Deploy on Push

on:
  push:
    branches:
      - master
      - staging

jobs:
  build-service:
    runs-on: ubuntu-latest
    needs: []
    strategy:
      matrix:
        service:
          - web
          - api
          - search
          - auth
          - pkg
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13.6'

      - name: Setup Protobuf
        uses: arduino/setup-protoc@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go for Protobuf
        run: go get -u github.com/golang/protobuf/protoc-gen-go

      - name: Setup elm-graphql
        run: yarn global add @dillonkearns/elm-graphql

      - name: Codegen
        run: make generate

      - name: Set VERSION
        run: echo ::set-env name=VERSION::${{ hashFiles(format('{0}/**', matrix.service)) }}

      - name: Set SERVICE
        run: echo ::set-env name=SERVICE::${{ matrix.service }}

      - name: Set ENVIRONMENT
        run: echo ::set-env name=ENVIRONMENT::$(test "${{ github.ref }}" = "refs/heads/master" && echo production || echo staging)

      - name: Set IMAGE
        run: echo ::set-env name=IMAGE::docker.pkg.github.com/loalang/loalang.xyz/$SERVICE

      - name: Authenticate Docker
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Pull latest version
        run: |
          docker pull $IMAGE:latest-builder || true
          docker pull $IMAGE:latest || true

      - name: Build new builder
        run: >
          docker build
          --cache-from $IMAGE:latest-builder
          --target builder
          --tag $IMAGE:$VERSION-builder
          $SERVICE

      - name: Build new version
        run: >
          docker build
          --cache-from $IMAGE:latest-builder
          --cache-from $IMAGE:latest
          --tag $IMAGE:$VERSION
          $SERVICE

      - name: Push new version
        run: |
          docker tag $IMAGE:$VERSION-builder $IMAGE:latest-builder
          docker push $IMAGE:$VERSION-builder
          docker push $IMAGE:latest-builder
          docker tag $IMAGE:$VERSION $IMAGE:latest
          docker push $IMAGE:$VERSION
          docker push $IMAGE:latest

      - name: Deploy
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: --namespace ${{ env.ENVIRONMENT }} set image deployment/${{ env.SERVICE }} ${{ env.SERVICE }}=docker.pkg.github.com/loalang/loalang.xyz/${{ env.SERVICE }}:${{ env.VERSION }} --record
