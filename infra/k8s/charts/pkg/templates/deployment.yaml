apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loalang.fullname" . }}
  labels:
{{ include "loalang.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: service-account-key
          secret:
            secretName: pkg-service-account
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          volumeMounts:
            - name: service-account-key
              mountPath: /var/secrets/google
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: pkg-database
                  key: POSTGRES_DATABASE
            - name: POSTGRES_HOST
              value: 127.0.0.1
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: pkg-database
                  key: POSTGRES_PASS
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: pkg-database
                  key: POSTGRES_USER

          - name: cloudsql-proxy
            image: gcr.io/cloudsql-docker/gce-proxy:1.14
            command: ["/cloud_sql_proxy",
                      "-instances=loalang-pkg=tcp:3306",
                      # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
                      # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
                      # "-ip_address_types=PRIVATE",
                      "-credential_file=/secrets/cloudsql/credentials.json"]
            securityContext:
              runAsUser: 2  # non-root user
              allowPrivilegeEscalation: false
            volumeMounts:
              - name: cloudsql-instance-credentials
                mountPath: /secrets/cloudsql
                readOnly: true
